// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  CLIENT
  AMDIN
  GUIDE
}

enum UserStatus {
  ACTIVE
  INACTIVE
  SUSPENDED
}

model User {
  id              String     @id @default(uuid())
  email           String     @unique
  password        String
  firstName       String
  lastName        String
  phone           String?
  dateOfBirth     DateTime?
  profileImage    String?
  role            UserRole   @default(CLIENT)
  status          UserStatus @default(ACTIVE)
  isEmailVerified Boolean    @default(false)

  // Password reset
  passwordResetToken   String?
  passwordResetExpires DateTime?

  // Email verification
  emailVerificationToken   String?
  emailVerificationExpires DateTime?

  // Timestamps
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  lastLoginAt DateTime?

  // Relations (we'll add these later)
  // tours                 Tour[]      // For guides
  // bookings              Booking[]   // For clients
  // reviews               Review[]    // For clients

  @@map("users")
}

// TASK: add more models later for tours, bookings, reviews
// model Tour {
//   id          String   @id @default(cuid())
//   // ... tour fields
//   @@map("tours")
// }

// model Booking {
//   id          String   @id @default(cuid())
//   // ... booking fields
//   @@map("bookings")
// }

// model Review {
//   id          String   @id @default(cuid())
//   // ... review fields
//   @@map("reviews")
// }
